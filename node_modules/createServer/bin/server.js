#!/usr/bin/env node
var http = require('http');
var https = require('https');
var fs = require('fs');
var exec = require('child_process').exec;
var __pk = require('../package.json');
var _fileName;
var __filePath = __pk.path + __pk.debugFile;

///创建服务
function __createServer(data, isDefault){
  var browserSync = require("browser-sync").create();
  //启动服务
  browserSync.init({
    server: {
      baseDir: "build",
      directory: false
    },
    port: 8585
  });
  //启动模拟器
  var _serverName = isDefault ? 'index.js' : __getServerName(data);
  _serverName = `http://127.0.0.1:8585/${_serverName}`;
  if(_serverName){
    console.log("weex server name is : " + _serverName);
  }else{
    console.error("can't find server name");
  }
  //监听文件变化
  browserSync.watch(__filePath).on('change', function(file){
    browserSync.reload('*.js');
    console.log('restart server')
  });
}

//获取服务名称
function __getServerName(data){

  data = data.toString();
  var _name;
  var _exg = /.*bootstrap\([\'\"](.+)[\'\"]/gi;
  //避免反复查找
  _name = _fileName ? [,_fileName] : _exg.exec(data);
  _name[1] = _name[1] ? _name[1] : 'index';
  if(_name){
    //更新变量
    _fileName = _fileName ? _fileName : _name[1] + '.js';
  }

  return _fileName;

}
//获取显示RN文件
function __getFile(url){
  https.get(url, function (response) {
    var responseText=[];
    var size = 0;
    response.on('data', function (data) {
      responseText.push(data);
      size+=data.length;
    });
    response.on('end', function () {
      responseText = Buffer.concat(responseText,size);
      if(responseText){
        __writeFile(responseText);
      }
    });
  }).end();
}
//重写本地文件方便本地调试
function __writeFile(data){
  var _newPath = __pk.path + __getServerName(data);
  fs.writeFile(__filePath, data, function (err) {
    if (err) throw err;
    fs.rename(__filePath, _newPath,function(err){
      if(err){
        console.log('文件名修改失败' + err);
      }else{
        //启动服务
        __createServer(data.toString());
      }
    })
  });
}

var readline = require('readline');

var rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

rl.question("请输入的页面地址:", function(fileName) {
  //如果为http远程线上地址,则特殊处理
  if(fileName.indexOf('.com') >= 0){
    //强制将协议头换成https避免302问题
    fileName = "https://" + fileName.replace("https://", "").replace("http://", "");
    //处理链接,自动拼凑后门参数,提取native脚本
    fileName = fileName.slice(0, fileName.indexOf("?")) + "?wh_native=true";
    try{
      __getFile(fileName);
    }catch(error){
      console.log('输入链接有误');
      console.log(error);
    }
  }else{
    try{
      var isDefault = false;
      if(!fileName){
        isDefault = true;
        fileName = "build/index.js";
      }
      var _data = fs.readFileSync(fileName, 'utf-8');
      if(_data){
        __createServer(_data, isDefault)
      }else{
        console.error("无法找到本地文件,确定文件是否存在")
      }
    }catch(error){
      console.log('文件不存或路径有误,请检查');
      console.log(error);
    }
  }
  rl.close();
});